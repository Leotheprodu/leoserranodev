---
import { getLangFromUrl, useTranslations } from '@/i18n/utils';
import { Icon } from 'astro-icon/components';
interface Props {
  project: {
    title: string;
    type: string;
    status: string;
    description: string;
    technologiesUsed: {
      name: string;
      icon: string;
    }[];
    links: {
      text: string;
      url: string;
    }[];
    achievementsAsDeveloper?: string[];
    achievementsAsBussines?: string[];
  };
}
const { project } = Astro.props as Props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div
  class="dark:bg-primario bg-secundario rounded-md p-5 relative shadow-md flex flex-col gap-4 overflow-hidden"
>
  <h3>{project.title}</h3>
  <span class="text-xs uppercase text-primario/50 dark:text-secundario/50"
    >{project.type}, {project.status}</span
  >
  <p>{project.description}</p>
  <div class="flex flex-col items-center gap-5">
    <h4>{t('projectCard.stack')}</h4>
    <ul class="flex gap-5 flex-wrap justify-center items-center">
      {
        project.technologiesUsed.map((technology) => (
          <li class="  flex flex-col justify-center items-center">
            <Icon class="" name={technology.icon} width={20} height={20} />
            <p>{technology.name}</p>
          </li>
        ))
      }
    </ul>
  </div>
  {
    project.achievementsAsBussines && (
      <div class="flex flex-col gap-5">
        <h4 class="text-center">{t('projectCard.businessAchievements')}</h4>
        <ul class="flex gap-2 flex-wrap">
          {project.achievementsAsBussines.map((achievement) => (
            <li class=" flex gap-2">
              <span>üéâ</span>
              <p class="">{achievement}</p>
            </li>
          ))}
        </ul>
      </div>
    )
  }
  {
    project.achievementsAsDeveloper && (
      <div class="flex flex-col gap-5">
        <h4 class="text-center">{t('projectCard.devAchievements')}</h4>
        <ul class="flex gap-2 flex-wrap items-center justify-center">
          {project.achievementsAsDeveloper.map((achievement) => (
            <li class=" flex w-[15rem] h-[10rem] p-2 rounded-xl gap-2">
              <span>‚úîÔ∏è</span>
              <p>{achievement}</p>
            </li>
          ))}
        </ul>
      </div>
    )
  }

  <div class="flex flex-col items-center justify-center gap-5">
    <h4>{t('projectCard.projectLink')}</h4>
    <div class="flex gap-5 flex-wrap items-center justify-center">
      {
        project.links.map((link) => (
          <a target="_blank" class="relative" href={link.url}>
            {link.text}

            <span class="absolute bottom-0 left-0 w-0 h-0 border-t-2 border-primario dark:border-secundario transition-all duration-300" />
          </a>
        ))
      }
    </div>
  </div>
</div>
<style>
  a:hover .absolute {
    width: 100%;
    height: 2px;
  }
</style>
